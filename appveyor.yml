environment:
  vcupgrade: '"C:\Program Files (x86)\Microsoft Visual Studio 12.0\Common7\Tools\vcupgrade.exe"'
  devenv: '"C:\Program Files (x86)\Microsoft Visual Studio 12.0\Common7\IDE\devenv.exe"'
install:
#- C:\MinGW\bin\mingw-get update
- C:\MinGW\bin\mingw-get install msys-gperf
- mkdir c:\Qt5.5.0\
- copy *.bat c:\Qt5.5.0\
- cd c:\Qt5.5.0\
- dir
- mkdir icu
- curl -O http://tenet.dl.sourceforge.net/project/icu/ICU4C/55.1/icu4c-55_1-src.zip
- 7z x icu4c-55_1-src.zip
- cd icu
- '%devenv% source\allionone\allinone.sln /upgrade'
- cd ..
- mkdir openssl
- curl -O https://www.openssl.org/source/openssl-1.0.2h.tar.gz
- 7z x openssl-1.0.2h.tar.gz
- 7z x openssl-1.0.2h.tar
#- mkdir qt5
- curl -O http://qt.mirror.constant.com/archive/qt/5.5/5.5.0/single/qt-everywhere-opensource-src-5.5.0.zip
#- cd qt5
- 7z x qt-everywhere-opensource-src-5.5.0.zip
#- cd ..
- dir qt-everywhere-opensource-src-5.5.0
- move qt-everywhere-opensource-src-5.5.0 qt5 
- dir qt5

build_script:
- call c:\Qt5.5.0\buildicu.bat
- call c:\Qt5.5.0\buildopenssl.bat
- call c:\Qt5.5.0\buildqt.bat
- 7z.exe a c:\Qt5.5.0.7z c:\Qt5.5.0\

test_script:
  # Put your test command here.
  # If you don't need to build C extensions on 64-bit Python 3.3 or 3.4,
  # you can remove "build.cmd" from the front of the command, as it's
  # only needed to support those cases.
  # Note that you must use the environment variable %PYTHON% to refer to
  # the interpreter you're using - Appveyor does not do anything special
  # to put the Python evrsion you want to use on PATH.
#  - "build.cmd %PYTHON%\\python.exe setup.py test"

after_test:
  # This step builds your wheels.
  # Again, you only need build.cmd if you're building C extensions for
  # 64-bit Python 3.3/3.4. And you need to use %PYTHON% to get the correct
  # interpreter
#  - "build.cmd %PYTHON%\\python.exe setup.py bdist_wheel"

artifacts:
 # bdist_wheel puts your built wheel in the dist directory
#  - path: dist\*
- path: c:\Qt5.5.0.7z

#on_success:
#  You can use this step to upload your artifacts to a public website.
#  See Appveyor's documentation for more details. Or you can simply
#  access your wheels from the Appveyor "artifacts" tab for your build.
